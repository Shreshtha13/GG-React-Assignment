{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","useState","searchTerm","setSearchTerm","movieList","setMovieList","Title","Year","imdbID","Type","Poster","movie","setMovie","movieDetails","setMovieDetails","useEffect","url","fetchData","a","axios","get","undefined","response","data","Search","fetchDetails","Plot","Cast","Actors","imdbRating","displayInfo","event","target","outerText","console","log","MoviesList","map","m","className","onClick","style","cursor","src","alt","type","onChange","value","name","visibility","filter","ReactDOM","render","document","getElementById"],"mappings":"kOAAe,I,mCC0GAA,EAnGH,WAEV,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,CACjCK,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,OAAQ,KALV,mBAAOC,EAAP,KAAcC,EAAd,KAOA,EAAwCX,mBAAS,IAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KAMAC,qBAAU,WACR,IAAMC,EAAG,qDAAiDd,GAEpDe,EAAS,uCAAG,4BAAAC,EAAA,sEACOC,IAAMC,IAAIJ,GADjB,YAEaK,KADvBC,EADU,QAEHC,KAAKC,QAChBnB,EAAaiB,EAASC,KAAKC,QAHb,2CAAH,qDAMfP,MACC,CAACf,IAEJa,qBAAU,WACR,IAAMU,EAAY,uCAAG,4BAAAP,EAAA,sEACIC,IAAMC,IAAN,qDAAwDT,IAD5D,YAEFU,KADXC,EADa,SAGjBR,EAAgB,CACdR,MAAOgB,EAASC,KAAKjB,MACrBoB,KAAMJ,EAASC,KAAKG,KACpBC,KAAML,EAASC,KAAKK,OACpBrB,KAAMe,EAASC,KAAKhB,KACpBsB,WAAYP,EAASC,KAAKM,WAC1BnB,OAAQY,EAASC,KAAKb,SATP,2CAAH,qDAalBe,MACC,CAACd,IAGJ,IAAMmB,EAAc,SAACC,GACnBnB,EAASmB,EAAMC,OAAOC,gBACKZ,IAAvBR,EAAaP,OACf4B,QAAQC,IAAItB,IAIVuB,EAAa,WACjB,OACEhC,EAAUiC,KAAI,SAAAC,GACZ,OACE,sBAA6BC,UAAU,OAAvC,UACE,qBAAKA,UAAU,YAAyBC,QAASV,EAAaW,MAAO,CAAEC,OAAQ,WAA/E,SACGJ,EAAEhC,OAD2BgC,EAAE/B,MAGlC,qBAAoBoC,IAAKL,EAAE5B,OAAQkC,IAAI,gBAA7BN,EAAE9B,UAJJ8B,EAAE9B,OAAS8B,EAAE/B,UAW3BM,EAAaP,MAQjB,OACE,gCACE,+BACE,uBAAOiC,UAAU,YAAYM,KAAK,OAAOC,SAnEpB,SAACf,GAC1B5B,EAAc4B,EAAMC,OAAOe,QAkEgDC,KAAK,aAE9E,sBAAKT,UAAU,cAAcE,MAAO,CAAEQ,gBAAmC5B,IAAvBR,EAAaP,MAAsB,SAAW,WAAhG,UACE,wBAAQkC,QAVO,WACnB1B,EAAgB,KASmByB,UAAU,eAAzC,mBACA,qBAAKI,IAAK9B,EAAaH,OAAQkC,IAAI,iBACnC,yCAAY/B,EAAaP,SACzB,wCAAWO,EAAaN,QACxB,wCAAWM,EAAac,QACxB,wCAAWd,EAAaa,QACxB,+CAAkBb,EAAagB,iBAEjC,qBAAKU,UAAU,aAAaE,MAAO,CAAES,YAA+B7B,IAAvBR,EAAaP,MAAsB,aAAe,aAA/F,SACE,cAAC8B,EAAD,U,MC7FRe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.47cce719.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { motion } from 'framer-motion'\n\n\nconst App = () => {\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const [movieList, setMovieList] = useState([])\n  const [movie, setMovie] = useState({\n    Title: \"\",\n    Year: \"\",\n    imdbID: \"\",\n    Type: \"\",\n    Poster: \"\"\n  })\n  const [movieDetails, setMovieDetails] = useState({})\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  useEffect(() => {\n    const url = `https://www.omdbapi.com/?apikey=7142622a&s=${searchTerm}`\n\n    const fetchData = async () => {\n      const response = await axios.get(url);\n      if (response.data.Search !== undefined)\n        setMovieList(response.data.Search)\n    }\n\n    fetchData()\n  }, [searchTerm])\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      const response = await axios.get(`https://www.omdbapi.com/?apikey=7142622a&t=${movie}`)\n      if (response !== undefined) {\n        setMovieDetails({\n          Title: response.data.Title,\n          Plot: response.data.Plot,\n          Cast: response.data.Actors,\n          Year: response.data.Year,\n          imdbRating: response.data.imdbRating,\n          Poster: response.data.Poster\n        })\n      }\n    }\n    fetchDetails()\n  }, [movie])\n\n\n  const displayInfo = (event) => {\n    setMovie(event.target.outerText)\n    if (movieDetails.Title !== undefined)\n      console.log(movieDetails)\n  }\n\n\n  const MoviesList = () => {\n    return (\n      movieList.map(m => {\n        return (\n          <div key={m.imdbID + m.Year} className=\"card\">\n            <div className='hoverCard' key={m.Year} onClick={displayInfo} style={{ cursor: 'pointer' }}>\n              {m.Title}\n            </div>\n            <img key={m.imdbID} src={m.Poster} alt=\"Movie Poster\" />\n          </div>\n        )\n      })\n    )\n  }\n\n  if (movieDetails.Title !== undefined) {\n\n  }\n\n  const closeDisplay = () => {\n    setMovieDetails({})\n  }\n\n  return (\n    <div>\n      <form>\n        <input className='searchBox' type='text' onChange={handleSearchChange} name=\"search\" />\n      </form>\n      <div className=\"displayCard\" style={{ visibility: movieDetails.Title === undefined ? 'hidden' : 'visible' }}>\n        <button onClick={closeDisplay} className='closeDisplay'>Close</button>\n        <img src={movieDetails.Poster} alt='movie poster' />\n        <p>Title : {movieDetails.Title}</p>\n        <p>Year : {movieDetails.Year}</p>\n        <p>Cast : {movieDetails.Cast}</p>\n        <p>Plot : {movieDetails.Plot}</p>\n        <p>imdb Rating : {movieDetails.imdbRating}</p>\n      </div>\n      <div className=\"movieCards\" style={{ filter: movieDetails.Title !== undefined ? 'blur(10px)' : 'blur(0px)' }}>\n        <MoviesList></MoviesList>\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport axios from 'axios'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}