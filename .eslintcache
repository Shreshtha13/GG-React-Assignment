[{"/home/shreshtha13/workSpace/GG/react-assignment/src/index.js":"1","/home/shreshtha13/workSpace/GG/react-assignment/src/App.js":"2"},{"size":169,"mtime":1632825218912,"results":"3","hashOfConfig":"4"},{"size":2876,"mtime":1633090692084,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8","usedDeprecatedRules":"9"},"51iys8",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/home/shreshtha13/workSpace/GG/react-assignment/src/index.js",["13"],"import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport axios from 'axios'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)",["14","15"],"/home/shreshtha13/workSpace/GG/react-assignment/src/App.js",["16","17"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { motion } from 'framer-motion'\n\n\nconst App = () => {\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const [movieList, setMovieList] = useState([])\n  const [movie, setMovie] = useState({\n    Title: \"\",\n    Year: \"\",\n    imdbID: \"\",\n    Type: \"\",\n    Poster: \"\"\n  })\n  const [movieDetails, setMovieDetails] = useState({})\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  useEffect(() => {\n    const url = `https://www.omdbapi.com/?apikey=7142622a&s=${searchTerm}`\n\n    const fetchData = async () => {\n      const response = await axios.get(url);\n      if (response.data.Search !== undefined)\n        setMovieList(response.data.Search)\n    }\n\n    fetchData()\n  }, [searchTerm])\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      const response = await axios.get(`https://www.omdbapi.com/?apikey=7142622a&t=${movie}`)\n      if (response !== undefined) {\n        setMovieDetails({\n          Title: response.data.Title,\n          Plot: response.data.Plot,\n          Cast: response.data.Actors,\n          Year: response.data.Year,\n          imdbRating: response.data.imdbRating,\n          Poster: response.data.Poster\n        })\n      }\n    }\n    fetchDetails()\n  }, [movie])\n\n\n  const displayInfo = (event) => {\n    setMovie(event.target.outerText)\n    if (movieDetails.Title !== undefined)\n      console.log(movieDetails)\n  }\n\n\n  const MoviesList = () => {\n    return (\n      movieList.map(m => {\n        return (\n          <div key={m.imdbID + m.Year} className=\"card\">\n            <div className='hoverCard' key={m.Year} onClick={displayInfo} style={{ cursor: 'pointer' }}>\n              {m.Title}\n            </div>\n            <img key={m.imdbID} src={m.Poster} alt=\"Movie Poster\" />\n          </div>\n        )\n      })\n    )\n  }\n\n  if (movieDetails.Title !== undefined) {\n\n  }\n\n  const closeDisplay = () => {\n    setMovieDetails({})\n  }\n\n  return (\n    <div>\n      <form>\n        <input className='searchBox' type='text' onChange={handleSearchChange} name=\"search\" />\n      </form>\n      <div className=\"displayCard\" style={{ visibility: movieDetails.Title === undefined ? 'hidden' : 'visible' }}>\n        <button onClick={closeDisplay} className='closeDisplay'>Close</button>\n        <img src={movieDetails.Poster} alt='movie poster' />\n        <p>Title : {movieDetails.Title}</p>\n        <p>Year : {movieDetails.Year}</p>\n        <p>Cast : {movieDetails.Cast}</p>\n        <p>Plot : {movieDetails.Plot}</p>\n        <p>imdb Rating : {movieDetails.imdbRating}</p>\n      </div>\n      <div className=\"movieCards\" style={{ filter: movieDetails.Title !== undefined ? 'blur(10px)' : 'blur(0px)' }}>\n        <MoviesList></MoviesList>\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;\n",{"ruleId":"18","severity":1,"message":"19","line":4,"column":8,"nodeType":"20","messageId":"21","endLine":4,"endColumn":13},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"18","severity":1,"message":"26","line":1,"column":8,"nodeType":"20","messageId":"21","endLine":1,"endColumn":12},{"ruleId":"18","severity":1,"message":"27","line":5,"column":10,"nodeType":"20","messageId":"21","endLine":5,"endColumn":16},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["28"],"no-negated-in-lhs",["29"],"'logo' is defined but never used.","'motion' is defined but never used.","no-global-assign","no-unsafe-negation"]